{extend  name="layout" /}
{block name="breadcrumb"}
	<a href="">配置管理</a>
	<a><cite>版本管理</cite></a>
{/block}

{block name="content"}
<div class="layui-col-md12">
	<table class="layui-hide" id="data_table" lay-filter="data_table"></table>
</div>

<script type="text/html" id="bar">
	<a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
	<a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>

<!-- 头部工具栏 -->
<script type="text/html" id="toolbar">
	<div class="layui-btn-container">
		<button class="layui-btn layui-btn-sm" lay-event="create">创建</button>
	</div>
</script>
{/block}

{block name="js"}
	<script>
		var laydate = layui.laydate
		var table = layui.table;
		var form = layui.form

		// table 展示
		table.render({
			elem: '#data_table',
			height: '600',
			toolbar: '#toolbar', //开启头部工具栏，并为其绑定左侧模板
			url: '/config/pklist/', //数据接口
			page: true, //开启分页
			cols: [[ //表头
				// {type:'checkbox'},
				{field: 'pkId', title: '序号', width:'5%'},
				{field: 'pdDisplay', title: '所属产品', width:'15%'},
				{field: 'pkName', title: '版本名称', width:'65%'},
				{fixed: 'right', title:'操作', toolbar: '#bar'}
			]]
		});	

		table.on('rowDouble(data_table)', function(obj){

		});

		// 行工具栏事件
		table.on('tool(data_table)', function(obj){
			console.log(obj);
			var data = obj.data;
			if (!data.pkId) {
				return false;
			}
			switch (obj.event) {
				case 'edit':
					openVersionDialog(data.pkId);
					break;
				case 'del':
					delVersionDialog(data);
					break;
			}
		});

		// 头工具栏事件
		table.on('toolbar(data_table)', function(obj){
			console.log(obj);
			// var mIdSting = mIds.toString()
			switch(obj.event){
				case 'create':
					openVersionDialog('');
					break;
			}
		});

		/**
		 * 删除版本
		 * @param data
		 * @returns {boolean}
		 */
		function delVersionDialog(data) {
			if (!data.pkId) {
				return false;
			}
			layer.confirm('确认删除：' + data.pkName + '?', function (index) {
				$.ajax({ 
					type : "POST",
					url : "/dialog/delPackage",
					data : {id: data.pkId},
					success : function(result) {
						if (result) {
							layer.close(index);
							table.reload('data_table');
							layer.msg('删除成功');
						} else {
							layer.msg('删除失败');
						}
					}
				});
			});
		}

		/**
		 * 添加 | 编辑
		 * @param pkId
		 */
		function openVersionDialog(pkId) {
			let title = "创建版本"
			if (pkId) {
				title = "编辑版本"
			}
			var dialogIndex = layer.open({
				title: title,
				skin:'to-fix-select',
				type: 2, 
				tipsMore: true,
				area: ['40%', '50%'],
				btn: ['保存', '关闭'],
				yes: function(index,layero) {
					// 保存
					var inputForm = $(window.frames["layui-layer-iframe" + dialogIndex].document).contents().find("#pkForm");
					var pkName = inputForm.find('input[name=pkName]').val();
					if (!pkName) {
						layer.msg('软件包名不能为空');
						return false;
					}
					let pkRadio = inputForm.find('input[name=pkRadio]').val();
					let parentId = inputForm.find('select[name=parentId]').val();
					if (pkRadio && !parentId) {
						layer.msg('请选择所属包');
						return false;
					}

					$.ajax({
						type: "POST",
						dataType: "json",
						url:'/dialog/updatepackage',
						data: inputForm.serialize(),
						success: function (result) {
							if (result) {
								layer.msg('操作成功')
								layer.close(dialogIndex)
							} else {
								layer.msg('操作失败')
							}
						},
						error: function(data) {
							layer.msg('操作失败')
						}
					});
				},
				end: function (index, layero) {
					table.reload('data_table');
				},
				content: '/dialog/package/pkid/' + pkId
			});
		}
	</script>
{/block}